name: Build driver
on:
  push:
    branches:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: radxacm5io
            script: ./install_opi5.sh
            base_image: https://github.com/radxa-build/radxa-cm5-io/releases/download/rsdk-b3/radxa-cm5-io_bookworm_cli_b3.output.img.xz

    name: "Build for ${{ matrix.name }}"

    steps:
    - uses: actions/checkout@v4.1.7
      with:
        fetch-depth: 0
    - name: Fetch tags
      run: git fetch --tags --force

    - uses: pguyot/arm-runner-action@HEAD
      id: install_deps
      with:
        image_additional_mb: 1500
        bind_mount_repository: true
        base_image: ${{ matrix.base_image }}
        commands: |
          chmod +x ${{matrix.script}}
          ${{ matrix.script }}
          chmod +x ./install_common.sh
          ./install_common.sh
          mkdir -p /opt/photonvision/
          echo "${{ github.ref_name }};${{ matrix.name }}" > /opt/photonvision/image-version

    - name: Compress built image
      run: |
        mv ${{ steps.install_deps.outputs.image }} photonvision_${{ matrix.name }}.img
        sudo xz -T 0 -v photonvision_${{ matrix.name }}.img

    - uses: actions/upload-artifact@v4.3.4
      with:
        name: photonvision_${{ matrix.name }}.img.xz
        path: photonvision_${{ matrix.name }}.img.xz
        if-no-files-found: error
        retention-days: 1

  release:
    needs: [build]
    runs-on: ubuntu-22.04
    steps:
      # Download literally every single artifact
      - uses: actions/download-artifact@v4.1.8
      - run: find
      # Push to dev release
      - uses: pyTooling/Actions/releaser@v1.0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: 'Dev'
          rm: true
          files: |
            **/*.xz
        if: github.event_name == 'push'
      # Upload all xz archives to GH tag if tagged
      - uses: softprops/action-gh-release@v2.0.8
        with:
          files: |
            **/*opi5*.xz
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: softprops/action-gh-release@v2.0.8
        with:
          files: |
            **/!(*opi5*).xz
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
